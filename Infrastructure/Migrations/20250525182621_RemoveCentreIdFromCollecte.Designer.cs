// <auto-generated />
using System;
using GestionCollectes.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionCollectes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525182621_RemoveCentreIdFromCollecte")]
    partial class RemoveCentreIdFromCollecte
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Centre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Centres");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Collecte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Collectes");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.CollecteCentre", b =>
                {
                    b.Property<int>("CollecteId")
                        .HasColumnType("int");

                    b.Property<int>("CentreId")
                        .HasColumnType("int");

                    b.HasKey("CollecteId", "CentreId");

                    b.HasIndex("CentreId");

                    b.ToTable("CollecteCentres");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Magasin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actif")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CentreId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CentreId", "Adresse")
                        .IsUnique();

                    b.ToTable("Magasins");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CentreId")
                        .HasColumnType("int");

                    b.Property<string>("MotDePasseHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.CollecteCentre", b =>
                {
                    b.HasOne("GestionCollectes.Domain.Entities.Centre", "Centre")
                        .WithMany("CollecteCentres")
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionCollectes.Domain.Entities.Collecte", "Collecte")
                        .WithMany("CollecteCentres")
                        .HasForeignKey("CollecteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centre");

                    b.Navigation("Collecte");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Magasin", b =>
                {
                    b.HasOne("GestionCollectes.Domain.Entities.Centre", "Centre")
                        .WithMany("Magasins")
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centre");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Utilisateur", b =>
                {
                    b.HasOne("GestionCollectes.Domain.Entities.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId");

                    b.Navigation("Centre");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Centre", b =>
                {
                    b.Navigation("CollecteCentres");

                    b.Navigation("Magasins");
                });

            modelBuilder.Entity("GestionCollectes.Domain.Entities.Collecte", b =>
                {
                    b.Navigation("CollecteCentres");
                });
#pragma warning restore 612, 618
        }
    }
}
